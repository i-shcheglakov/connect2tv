#!/bin/bash
# Author: Igor Shcheglakov (i.shcheglako@samsung.com)

OPTION_CONNECT_ONLY=
OPTION_IP_ADDR=
OPTION_BUILD_PROFILE=

declare -a OPTION_RPMS

function usage()
{
  echo "Usage: `basename $0` [-i=<addr>] [-p=<profile>] [vnc|rdp|knox]"
}

# Parse command line arguments
function parse_cmd()
{
  if [ $# -eq 0 ]; then
    OPTION_CONNECT_ONLY="True"
    return
  fi

  for ARG in "$@"; do
    case "$ARG" in
      -i=*)
        OPTION_IP_ADDR=${ARG#*=}
        ;;
      -p=*)
        OPTION_BUILD_PROFILE=${ARG#*=}
        ;;
      vnc)
        OPTION_RPMS=("com.samsung.tv.vnc-1.0.0-1.armv7l.rpm")
        ;;
      rdp)
        OPTION_RPMS=("org.tizen.efreerdp-2.0.0-1.armv7l.rpm")
        ;;
      knox)
        OPTION_RPMS=("com.samsung.tv.knox-browser-2.9.0-1.armv7l.rpm")
        OPTION_RPMS+=("com.samsung.tv.knox-browser-autofill-2.9.0-1.armv7l.rpm")
        OPTION_RPMS+=("com.samsung.tv.knox-browser-libs-2.9.0-1.armv7l.rpm")
        OPTION_RPMS+=("com.samsung.tv.knox-browser-theme-resource-2.9.0-1.armv7l.rpm")
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      *)
        echo "Unknown argument: $ARG" >&2
        usage
        exit 1
        ;;
    esac
  done
}

parse_cmd $@

if [ ! -e "$HOME/.gbs.conf" ]; then
  echo "$HOME/.gbs.conf not found" >&2
  exit 1
fi

# Figure out current default profile in $HOME/.gbs.conf if not set with CLI
if [ -z "$OPTION_BUILD_PROFILE" ]; then
  OPTION_BUILD_PROFILE=`sed -n 's/profile = profile.\(.*\)$/\1/p' "$HOME/.gbs.conf"`
else
  OPTION_BUILD_PROFILE=`echo "$OPTION_BUILD_PROFILE" | sed -n 's/profile.\(.*\)$/\1/p'`
fi

# Discover IP address based on the default profile
if [ -z "$OPTION_IP_ADDR" ]; then

  case "$OPTION_BUILD_PROFILE" in
    muse.m.iwb.5.0)
      OPTION_IP_ADDR="106.125.38.173" # FLiP
      ;;
    kant.m2.lfd.5.0)
      OPTION_IP_ADDR="106.125.40.215"
      ;;
    muse.l.atsc.5.5)
      #OPTION_IP_ADDR="106.125.38.127"
      OPTION_IP_ADDR="106.125.38.231"
      ;;
    *)
      echo "Can't match profile '$OPTION_BUILD_PROFILE' with any known IP address." >&2
      echo "Use -i=<addr> option to explicitly set IP address of a target device ." >&2
      exit 1
  esac

fi

sdb connect "$OPTION_IP_ADDR"
sdb -s "$OPTION_IP_ADDR" root on

if [ "x$OPTION_CONNECT_ONLY" != "x" ]; then
  exit 0
fi

# Push and install RPM package(s) onto the device
for RPM_FILE in ${OPTION_RPMS[@]}; do

  # Get package name from RPM file name
  PKG_NAME=${RPM_FILE%-*-*}

  sdb -s "$OPTION_IP_ADDR" push "$HOME/GBS-ROOT/local/repos/$OPTION_BUILD_PROFILE/armv7l/RPMS/$RPM_FILE" /tmp

  sdb -s "$OPTION_IP_ADDR" shell rpm -e --nodeps "$PKG_NAME"
  sdb -s "$OPTION_IP_ADDR" shell tpk-backend --force-remove --preload -d "$PKG_NAME"
  sdb -s "$OPTION_IP_ADDR" shell rpm -ivh --force --nodeps "/tmp/$RPM_FILE"

  if [ "x$PKG_NAME" != "x" ]; then
    sdb -s "$OPTION_IP_ADDR" shell tpk-backend -y "$PKG_NAME" --preload
  fi

done
